{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Projectile Motion Analysis 1. Theoretical Foundation Derivation of Equations We begin with Newton's Second Law: \\(F = ma\\) Considering only gravity acting in the negative y-direction: \\(F_y = -mg\\) This leads to the following accelerations: \\(a_x = 0\\) \\(a_y = -g\\) Integrating with respect to time, we obtain the velocities: \\(v_x = v_{0x}\\) \\(v_y = v_{0y} - gt\\) Integrating again, we get the position equations: \\(x = v_{0x}t\\) \\(y = v_{0y}t - \\frac{1}{2}gt^2\\) Where: \\(v_{0x} = v_0 \\cos(\\theta)\\) \\(v_{0y} = v_0 \\sin(\\theta)\\) \\(v_0\\) is the initial velocity. \\(\\theta\\) is the launch angle. \\(g\\) is the acceleration due to gravity. \\(t\\) is time. Family of Solutions Varying \\(v_0\\) and \\(\\theta\\) leads to different parabolic trajectories, forming a family of solutions. Changes in \\(g\\) also affect the trajectory. 2. Analysis of the Range Range Equation The horizontal range (R) is given by: \\(R = \\frac{v_0^2 \\sin(2\\theta)}{g}\\) Parameter Dependence Angle: Maximum range occurs at \\(\\theta = 45^\\circ\\) . The range is symmetrical about this angle. Initial Velocity: Range is proportional to \\(v_0^2\\) . Gravitational Acceleration: Range is inversely proportional to \\(g\\) . 3. Practical Applications Uneven Terrain: Adjust the y-coordinate equation to account for terrain profile. Air Resistance: Introduce a drag force term into the differential equations. Wind: Add a wind velocity component to \\(v_x\\) . Sports: Modeling ball trajectories in various sports. Engineering: Designing artillery projectiles and rocket trajectories. Astrophysics: Modeling comet and asteroid trajectories. 4. Implementation import numpy as np import matplotlib.pyplot as plt def calculate_range(v0, theta_deg, g): theta_rad = np.radians(theta_deg) return (v0**2 * np.sin(2 * theta_rad)) / g def simulate_projectile(v0, theta_deg, g, time_steps=100): theta_rad = np.radians(theta_deg) t = np.linspace(0, (2 * v0 * np.sin(theta_rad)) / g, time_steps) x = v0 * np.cos(theta_rad) * t y = v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y g = 9.81 v0_values = [10, 20, 30] theta_degrees = np.linspace(0, 90, 91) plt.figure(figsize=(10, 6)) for v0 in v0_values: ranges = [calculate_range(v0, theta, g) for theta in theta_degrees] plt.plot(theta_degrees, ranges, label=f'v0 = {v0} m/s') plt.title('Projectile Range vs. Launch Angle') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (meters)') plt.legend() plt.grid(True) plt.show() plt.figure(figsize=(10, 6)) for v0 in v0_values: x, y = simulate_projectile(v0, 45, g) plt.plot(x, y, label=f'v0 = {v0} m/s') plt.title(\"Projectile Trajectory at 45 Degrees\") plt.xlabel(\"Distance (m)\") plt.ylabel(\"Height (m)\") plt.grid(True) plt.legend() plt.show() v0 = 25; angles = [25, 45, 65] plt.figure(figsize = (10,6)) for angle in angles: x,y = simulate_projectile(v0, angle,g) plt.plot(x,y, label = f'angle = {angle}') plt.title(\"Projectile Trajectory at varying angles\") plt.xlabel(\"Distance (m)\") plt.ylabel(\"Height (m)\") plt.grid(True) plt.legend() plt.show()","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-motion-analysis","text":"","title":"Projectile Motion Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#derivation-of-equations","text":"We begin with Newton's Second Law: \\(F = ma\\) Considering only gravity acting in the negative y-direction: \\(F_y = -mg\\) This leads to the following accelerations: \\(a_x = 0\\) \\(a_y = -g\\) Integrating with respect to time, we obtain the velocities: \\(v_x = v_{0x}\\) \\(v_y = v_{0y} - gt\\) Integrating again, we get the position equations: \\(x = v_{0x}t\\) \\(y = v_{0y}t - \\frac{1}{2}gt^2\\) Where: \\(v_{0x} = v_0 \\cos(\\theta)\\) \\(v_{0y} = v_0 \\sin(\\theta)\\) \\(v_0\\) is the initial velocity. \\(\\theta\\) is the launch angle. \\(g\\) is the acceleration due to gravity. \\(t\\) is time.","title":"Derivation of Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#family-of-solutions","text":"Varying \\(v_0\\) and \\(\\theta\\) leads to different parabolic trajectories, forming a family of solutions. Changes in \\(g\\) also affect the trajectory.","title":"Family of Solutions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-equation","text":"The horizontal range (R) is given by: \\(R = \\frac{v_0^2 \\sin(2\\theta)}{g}\\)","title":"Range Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#parameter-dependence","text":"Angle: Maximum range occurs at \\(\\theta = 45^\\circ\\) . The range is symmetrical about this angle. Initial Velocity: Range is proportional to \\(v_0^2\\) . Gravitational Acceleration: Range is inversely proportional to \\(g\\) .","title":"Parameter Dependence"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"Uneven Terrain: Adjust the y-coordinate equation to account for terrain profile. Air Resistance: Introduce a drag force term into the differential equations. Wind: Add a wind velocity component to \\(v_x\\) . Sports: Modeling ball trajectories in various sports. Engineering: Designing artillery projectiles and rocket trajectories. Astrophysics: Modeling comet and asteroid trajectories.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation","text":"import numpy as np import matplotlib.pyplot as plt def calculate_range(v0, theta_deg, g): theta_rad = np.radians(theta_deg) return (v0**2 * np.sin(2 * theta_rad)) / g def simulate_projectile(v0, theta_deg, g, time_steps=100): theta_rad = np.radians(theta_deg) t = np.linspace(0, (2 * v0 * np.sin(theta_rad)) / g, time_steps) x = v0 * np.cos(theta_rad) * t y = v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y g = 9.81 v0_values = [10, 20, 30] theta_degrees = np.linspace(0, 90, 91) plt.figure(figsize=(10, 6)) for v0 in v0_values: ranges = [calculate_range(v0, theta, g) for theta in theta_degrees] plt.plot(theta_degrees, ranges, label=f'v0 = {v0} m/s') plt.title('Projectile Range vs. Launch Angle') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (meters)') plt.legend() plt.grid(True) plt.show() plt.figure(figsize=(10, 6)) for v0 in v0_values: x, y = simulate_projectile(v0, 45, g) plt.plot(x, y, label=f'v0 = {v0} m/s') plt.title(\"Projectile Trajectory at 45 Degrees\") plt.xlabel(\"Distance (m)\") plt.ylabel(\"Height (m)\") plt.grid(True) plt.legend() plt.show() v0 = 25; angles = [25, 45, 65] plt.figure(figsize = (10,6)) for angle in angles: x,y = simulate_projectile(v0, angle,g) plt.plot(x,y, label = f'angle = {angle}') plt.title(\"Projectile Trajectory at varying angles\") plt.xlabel(\"Distance (m)\") plt.ylabel(\"Height (m)\") plt.grid(True) plt.legend() plt.show()","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 :) Are u ok? I am fine","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":":) Are u ok? I am fine","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}